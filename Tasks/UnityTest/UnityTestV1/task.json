{
  "id": "85e57e6f-cb59-4d1d-979f-dd830b51f2fa",
  "name": "UnityTestTask",
  "friendlyName": "Unity Test",
  "description": "Tests a Unity project and produce the results in NUnit compatible files.",
  "helpMarkDown": "Use this task to run tests on a Unity project. [More Information](https://unitydevops.com/docs/unity-test-task)",
  "category": "Azure Pipelines",
  "visibility": [
    "Build"
  ],
  "author": "Dinomite Studios",
  "version": {
    "Major": "1",
    "Minor": "5",
    "Patch": "0"
  },
  "releaseNotes": "[Full Changelog](https://github.com/Dinomite-Studios/unity-azure-pipelines-tasks/blob/master/Tasks/UnityTest/UnityTestV1/CHANGELOG.md)",
  "minimumAgentVersion": "2.144.0",
  "instanceNameFormat": "Unity Test",
  "groups": [
    {
      "name": "advancedGroup",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "testMode",
      "type": "pickList",
      "label": "Test mode",
      "defaultValue": "editMode",
      "helpMarkDown": "The mode you want to run tests in. Available platforms are Edit Mode and Play Mode.",
      "options": {
        "editMode": "Edit Mode",
        "playMode": "Play Mode"
      }
    },
    {
      "name": "unityEditorsPathMode",
      "type": "pickList",
      "label": "Unity editors location",
      "defaultValue": "unityHub",
      "helpMarkDown": "Define where to look for Unity installations on the agent.",
      "options": {
        "unityHub": "Unity Hub default installation path",
        "environmentVariable": "Use UNITYHUB_EDITORS_FOLDER_LOCATION environment variable on agent",
        "specify": "Specify path"
      }
    },
    {
      "name": "customUnityEditorsPath",
      "type": "string",
      "label": "Editors folder location",
      "defaultValue": "",
      "required": true,
      "visibleRule": "unityEditorsPathMode == specify",
      "helpMarkDown": "Specify where to look for Unity Editor versions on the agent."
    },
    {
      "name": "unityProjectPath",
      "type": "filePath",
      "label": "Unity project path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "(Optional) Enter the directory path to the Unity project. If no value is entered, the root of the repository will be used."
    },
    {
      "name": "unityVersion",
      "type": "string",
      "label": "Unity version",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "(Optional) Enter the custom version of Unity. If no value is entered, it will be resolved automatically."
    },
    {
      "name": "failOnTestFail",
      "type": "boolean",
      "label": "Fails when at least one test has failed",
      "helpMarkDown": "(Optional) When set, the pipeline step will fail when at least one of the tests executed has failed.",
      "groupName": "advancedGroup",
      "defaultValue": true
    },
    {
      "name": "testCategory",
      "type": "string",
      "label": "Test category",
      "helpMarkDown": "(Optional) A semicolon-separated list of test categories to include in the run. If using both testFilter and testCategory, then tests only run that matches both.",
      "groupName": "advancedGroup"
    },
    {
      "name": "testFilter",
      "type": "string",
      "label": "Test filter",
      "helpMarkDown": "(Optional) A semicolon-separated list of test names to run, or a regular expression pattern to match tests by their full name.",
      "groupName": "advancedGroup"
    },
    {
      "name": "batchMode",
      "type": "boolean",
      "label": "Batch mode",
      "helpMarkDown": "(Optional) Indicate whether Unity executes in batch mode. Note: When testing Unity UI functionality, you cannot use batch mode.",
      "groupName": "advancedGroup",
      "defaultValue": true
    },
    {
      "name": "noGraphics",
      "type": "boolean",
      "label": "No graphics",
      "helpMarkDown": "(Optional) When set, Unity does not initialize the graphics device. You can then run automated workflows on machines that don't have a GPU.",
      "groupName": "advancedGroup",
      "defaultValue": true
    },
    {
      "name": "acceptApiUpdate",
      "type": "boolean",
      "label": "Run API updater",
      "helpMarkDown": "(Optional) Use this option to specify that Unity API Updater should run before building the project.",
      "groupName": "advancedGroup",
      "defaultValue": false
    },
    {
      "name": "noPackageManager",
      "type": "boolean",
      "label": "Disable Unity package manager",
      "helpMarkDown": "(Optional) Disables the Unity Package Manager.",
      "groupName": "advancedGroup",
      "defaultValue": false
    },
    {
      "name": "testResultsPath",
      "type": "string",
      "label": "Test results output path",
      "helpMarkDown": "(Optional) The path where Unity should save the result file. By default, Unity saves it in the Projectâ€™s root folder.",
      "groupName": "advancedGroup",
      "defaultValue": "Test Results"
    },
    {
      "name": "additionalCmdArgs",
      "type": "string",
      "label": "Command line arguments",
      "defaultValue": "",
      "groupName": "advancedGroup",
      "helpMarkDown": "(Optional) Specify additional command line arguments, see the [documentation](https://docs.unity3d.com/Packages/com.unity.test-framework@latest) for more info."
    }
  ],
  "outputVariables": [
    {
      "name": "testResultsOutputPathAndFileName",
      "description": "Path and FileName of the results in XML format. Path is relative to repository root."
    },
    {
      "name": "logsOutputPath",
      "description": "Path to the Unity editor log files generated."
    },
    {
      "name": "testsFailed",
      "description": "\"true\", if at least one test has failed. \"false\" otherwise."
    }
  ],
  "execution": {
    "Node10": {
      "target": "unity-test.js",
      "argumentFormat": ""
    }
  },
  "messages": {
    "testSuccess": "The Unity test run completed successfully",
    "testFailed": "The Unity test run failed with exit code",
    "warningAlphaBetaVersion": "You are using a Unity Alpha/Beta version. It may not be supported by the extension!",
    "projectPathInfo": "Determining Unity editor version for project at",
    "successGetUnityEditorVersion": "Success, Unity editor version found",
    "failGetUnityEditorVersion": "Fail, Unity editor version not found"
  }
}