{
  "id": "64e90d50-a9c0-11e8-a356-d3eab7857116",
  "name": "UnityBuildTask",
  "friendlyName": "Unity Build",
  "description": "Build a Unity project and get the exported output files.",
  "helpMarkDown": "Use this task to build your Unity project and generate the target platform's output files. [More Information](https://unitydevops.com/docs/unity-build-task)",
  "category": "Azure Pipelines",
  "preview": false,
  "visibility": [
    "Build"
  ],
  "author": "Dinomite",
  "version": {
    "Major": 3,
    "Minor": 3,
    "Patch": 0
  },
  "releaseNotes": "[Full Changelog](https://github.com/Dinomite-Studios/unity-azure-pipelines-tasks/blob/master/Tasks/UnityBuild/UnityBuildV3/CHANGELOG.md)",
  "minimumAgentVersion": "2.144.0",
  "instanceNameFormat": "Unity Build $(buildTarget)",
  "groups": [
    {
      "name": "general",
      "displayName": "General",
      "isExpanded": true
    },
    {
      "name": "build",
      "displayName": "Build",
      "isExpanded": true
    },
    {
      "name": "platform",
      "displayName": "Platform",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "unityEditorsPathMode",
      "type": "pickList",
      "label": "Unity editors location",
      "defaultValue": "default",
      "helpMarkDown": "Define where to look for Unity installations on the agent.",
      "groupName": "general",
      "options": {
        "default": "Default (recommended)",
        "environmentVariable": "Use UNITYHUB_EDITORS_FOLDER_LOCATION environment variable on agent",
        "specify": "Specify path"
      }
    },
    {
      "name": "customUnityEditorsPath",
      "type": "string",
      "label": "Editors folder location",
      "defaultValue": "",
      "groupName": "general",
      "required": true,
      "visibleRule": "unityEditorsPathMode == specify",
      "helpMarkDown": "Specify where to look for Unity Editor versions on the agent."
    },
    {
      "name": "versionSelectionMode",
      "type": "pickList",
      "label": "Unity version",
      "groupName": "general",
      "required": false,
      "helpMarkDown": "Select which Unity version to run the task with.",
      "defaultValue": "project",
      "options": {
        "project": "Project Version",
        "specify": "Specify"
      }
    },
    {
      "name": "version",
      "type": "string",
      "label": "Version",
      "groupName": "general",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Select which Unity version to run the task with, e.g. value: `2022.2.1f1`.",
      "visibleRule": "versionSelectionMode == specify"
    },
    {
      "name": "unityProjectPath",
      "type": "filePath",
      "label": "Unity project path",
      "groupName": "general",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "(Optional) Enter the path to the Unity project within the repository. If no value is entered, the root of the repository will be used."
    },
    {
      "name": "buildFlow",
      "type": "radio",
      "label": "Build Flow",
      "defaultValue": "platform",
      "helpMarkDown": "Select the build target flow used to build your project. Starting with Unity 6 the new build profiles offer a sophisticated way of building for different platforms.",
      "groupName": "build",
      "options": {
        "platform": "Platform",
        "profile": "Profile (Unity 6+)"
      }
    },
    {
      "name": "buildTarget",
      "type": "pickList",
      "label": "Build target",
      "defaultValue": "standalone",
      "helpMarkDown": "Build platform to build the Unity project for.",
      "groupName": "build",
      "visibleRule": "buildFlow = platform",
      "options": {
        "standalone": "Standalone (agent-based)",
        "Win": "Windows Standalone (32-bit)",
        "Win64": "Windows Standalone (64-bit)",
        "OSXUniversal": "macOS Standalone",
        "Linux": "Linux Standalone (32-bit)",
        "Linux64": "Linux Standalone (64-bit)",
        "LinuxUniversal": "Linux Standalone (universal)",
        "iOS": "iOS",
        "Android": "Android",
        "Web": "Web",
        "WebStreamed": "Web Streamed",
        "WebGL": "WebGL",
        "XboxOne": "Xbox One",
        "PS4": "PS4",
        "WindowsStoreApps": "Windows Store Apps",
        "Switch": "Switch",
        "N3DS": "N3DS",
        "tvOS": "tvOS",
        "visionos": "visionOS"
      }
    },
    {
      "name": "buildProfile",
      "type": "filePath",
      "helpMarkDown": "Set the build profile saved at the given path as an active build profile for the build.",
      "label": "Profile",
      "groupName": "build",
      "required": true,
      "defaultValue": "",
      "visibleRule": "buildFlow = profile"
    },
    {
      "name": "buildScriptType",
      "type": "radio",
      "label": "Build script type",
      "defaultValue": "default",
      "helpMarkDown": "Build script type: Use `Default` to use a built-in simple script which will perform a build without additional options. Use `Existing` if you already have a build script in your source and only need to specify the method to execute on build. Or use `Inline` to define the script inline, please make sure it's valid C#.",
      "groupName": "build",
      "options": {
        "default": "Default",
        "existing": "Existing",
        "inline": "Inline"
      }
    },
    {
      "name": "outputPath",
      "type": "filePath",
      "helpMarkDown": "Specify the build output path relative to the repository root or fully qualified.",
      "label": "Output path",
      "groupName": "build",
      "required": true,
      "defaultValue": "$(Build.BinariesDirectory)",
      "visibleRule": "buildScriptType = default"
    },
    {
      "name": "outputFileName",
      "type": "string",
      "label": "Output filename",
      "groupName": "build",
      "helpMarkDown": "Enter the output filename to be used when constructing the platform-appropriate output. For instance, if you want the output to be 'thegame.exe' on Windows Standalone, enter 'thegame'",
      "required": true,
      "defaultValue": "drop",
      "visibleRule": "buildScriptType = default"
    },
    {
      "name": "inlineBuildScript",
      "type": "multiLine",
      "label": "Inline build script",
      "visibleRule": "buildScriptType = inline",
      "required": true,
      "groupName": "build",
      "defaultValue": "/* Write your C# build script here. Define a class and make sure to define a public static method to execute for the build. You'll want to verify your script actually works on your local computer.\n\nExample:\npublic class MyClass {\npublic static void PerformBuild() {\n...\n}\n}\n */",
      "properties": {
        "resizable": "true",
        "rows": "20",
        "maxLength": "5000"
      },
      "helpMarkDown": "Write your C# build script here. Define a class and make sure to define a public static method to execute for the build. You'll want to verify your script actually works on your local computer."
    },
    {
      "name": "scriptExecuteMethod",
      "type": "string",
      "label": "Build script execute method",
      "groupName": "build",
      "visibleRule": "buildScriptType = inline || buildScriptType = existing",
      "required": true,
      "defaultValue": "",
      "helpMarkDown": "Specify class and method name of the method to execute in your build script separated by a dot. E.g. `MyClass.PerformBuild`"
    },
    {
      "name": "additionalCmdArgs",
      "type": "string",
      "label": "Command line arguments",
      "groupName": "build",
      "defaultValue": "",
      "helpMarkDown": "(Optional) Specify additional command line arguments, see the [documentation](https://docs.unity3d.com/Manual/CommandLineArguments.html) for more info."
    },
    {
      "name": "buildAppBundle",
      "type": "boolean",
      "label": "Build Android App Bundle (Google Play)",
      "groupName": "platform",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Set to true to build an Android App Bundle (aab file) instead of an apk. The default value is false.",
      "visibleRule": "buildTarget == Android && buildScriptType == default"
    },
    {
      "name": "signAppBundle",
      "type": "boolean",
      "label": "Sign APK / app bundle",
      "groupName": "platform",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Whether to sign the produced APK / app bundle using a custom keystore.",
      "visibleRule": "buildTarget == Android && buildScriptType == default"
    },
    {
      "name": "keystoreName",
      "type": "filePath",
      "helpMarkDown": "Android keystore name / file path.",
      "label": "Keystore file path",
      "groupName": "platform",
      "required": true,
      "defaultValue": "",
      "visibleRule": "buildTarget == Android && signAppBundle == true && buildScriptType == default"
    },
    {
      "name": "keystorePass",
      "type": "string",
      "label": "Keystore password",
      "groupName": "platform",
      "helpMarkDown": "Android keystore password.",
      "required": true,
      "defaultValue": "",
      "visibleRule": "buildTarget == Android && signAppBundle == true && buildScriptType == default"
    },
    {
      "name": "keystoreAliasName",
      "type": "string",
      "label": "Keystore alias name",
      "groupName": "platform",
      "helpMarkDown": "Android key alias name.",
      "required": true,
      "defaultValue": "",
      "visibleRule": "buildTarget == Android && signAppBundle == true && buildScriptType == default"
    },
    {
      "name": "keystoreAliasPass",
      "type": "string",
      "label": "Keystore alias password",
      "groupName": "platform",
      "helpMarkDown": "Password for the key used for signing an Android application. If left empty, the keystore main password is assumed.",
      "required": false,
      "defaultValue": "",
      "visibleRule": "buildTarget == Android && signAppBundle == true && buildScriptType == default"
    }
  ],
  "outputVariables": [
    {
      "name": "editorLogFilePath",
      "description": "Specifies the location of the editor log file generated."
    }
  ],
  "execution": {
    "Node10": {
      "target": "unity-build.js",
      "argumentFormat": ""
    },
    "Node20_1": {
      "target": "unity-build.js",
      "argumentFormat": ""
    }
  },
  "messages": {
    "buildSuccess": "The Unity build completed successfully",
    "buildFailed": "The Unity build failed with exit code",
    "warningAlphaBetaVersion": "You are using a Unity Alpha/Beta version. It may not be supported by the extension!",
    "projectPathInfo": "Determining Unity editor version for project at",
    "successGetUnityEditorVersion": "Success, Unity editor version found",
    "failGetUnityEditorVersion": "Fail, Unity editor version not found"
  }
}